# vi: ft=Makefile

# Tool Versions

LOCALBIN ?= artifacts/bin

#########################################################################################################
## Controller Gen

CONTROLLER_TOOLS_VERSION ?= v0.14.0
CONTROLLER_GEN ?= $(LOCALBIN)/$(CONTROLLER_TOOLS_VERSION)/controller-gen

$(LOCALBIN)/%/controller-gen:
	-@mkdir -p "$(MF_PROJECT_ROOT)/$(@D)"
	test -s $(CONTROLLER_GEN) && $(CONTROLLER_GEN) --version | grep -q $(*) || \
	GOBIN="$(MF_PROJECT_ROOT)/$(@D)" go install sigs.k8s.io/controller-tools/cmd/controller-gen@$(*)

tools:: $(CONTROLLER_GEN)

.PHONY: manifests
manifests:: $(CONTROLLER_GEN) ## Generate WebhookConfiguration, ClusterRole and CustomResourceDefinition objects.
	$(CONTROLLER_GEN) rbac:roleName=manager-role crd webhook paths="./..." output:crd:artifacts:config=config/crd/bases

.PHONY: generate
generate:: $(CONTROLLER_GEN) ## Generate code containing DeepCopy, DeepCopyInto, and DeepCopyObject method implementations.
	$(CONTROLLER_GEN) object:headerFile="hack/boilerplate.go.txt" paths="./..."

$(GENERATED_FILES):: $(CONTROLLER_GEN)
	$(CONTROLLER_GEN) object:headerFile="hack/boilerplate.go.txt" paths="./..."


#########################################################################################################
## Kustomize

KUSTOMIZE_VERSION ?= v5.3.0
KUSTOMIZE_INSTALL_SCRIPT ?= "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"

KUSTOMIZE ?= $(LOCALBIN)/$(KUSTOMIZE_VERSION)/kustomize

$(LOCALBIN)/%/kustomize:
	-@mkdir -p "$(MF_PROJECT_ROOT)/$(@D)"
	@if test -x $(KUSTOMIZE) && ! $(KUSTOMIZE) version | grep -q $(*); then \
		echo "$(KUSTOMIZE) version is not expected $(*). Removing it before installing."; \
		rm -rf $(KUSTOMIZE); \
	fi
	test -s $(KUSTOMIZE) || { curl -Ss $(KUSTOMIZE_INSTALL_SCRIPT) --output install_kustomize.sh && bash install_kustomize.sh "$(subst v,,$(KUSTOMIZE_VERSION))" "$(@D)"; rm install_kustomize.sh; }

tools:: $(KUSTOMIZE)

#########################################################################################################
## env-test

ENVTEST ?= $(LOCALBIN)/$(ENVTEST_K8S_VERSION)/setup-envtest

$(LOCALBIN)/%/setup-envtest:
	-@mkdir -p "$(MF_PROJECT_ROOT)/$(@D)"
	test -s $(ENVTEST) || \
	GOBIN="$(MF_PROJECT_ROOT)/$(@D)" go install sigs.k8s.io/controller-runtime/tools/setup-envtest@latest

tools:: $(ENVTEST)

# .PHONY: envtest
# envtest: $(ENVTEST) ## Download envtest-setup locally if necessary.
# $(ENVTEST): $(LOCALBIN)
# 	test -s $(LOCALBIN)/setup-envtest || GOBIN=$(LOCALBIN) go install sigs.k8s.io/controller-runtime/tools/setup-envtest@latest

_clean::
	sudo $(RM) -r $(LOCALBIN)/k8s
